# Poseidon Lua

## Description

Poseidon Lua is an optionally-typed programming language that integrates the manual memory management and direct memory programming features of C into Lua. Therefore, it is possible to start programming in Lua, then slowly shift towards programming in C over time.

Poseidon Lua extends Typed Lua with C types and special operators for manual memory management ( malloc and free ). Poseidon Lua provides static typechecking for its C types. The special operators can be used to allocate ( malloc ) and deallocate ( free ) blocks of memory.

Modified Lua is our extension of the Lua programming language. It provides special operators for the manipulation of raw memory. A Poseidon Lua program is ultimately compiled to a Modified Lua program.

Poseidon Lua comes with the Modified LuaFFI library. It is our extension of the luaffifb library. It allows a Poseidon Lua program to call an external C function and use the result that is returned.

## Prerequisites

1. `gcc` >= version 4.8.4
2. `lua` >= version 5.3.3
3. `luarocks` library packages:

	* `lpeg` >= version 1.0.0-1

## Initial Setup

Open a bash terminal and change directory to the project directory.

Set the value of each of the following shell variables:

* `$project_dir` should be set to the pathway to the project directory.
* `$poseidonLua` should be set to the pathway to the poseidonLua script.

```bash

project_dir="$( pwd )"

poseidonLua="${project_dir}/poseidonLua"

```

## Build and Install

1. BUILD: The Modified Lua virtual machine.

```bash

$poseidonLua build

```

2. BUILD and INSTALL: The Modified LuaFFI library.

```bash

cd "${project_dir}/luaffifb-master"

luarocks make

```

NOTE: If the Modified LuaFFI library is not installed, the rest of the software will still work properly. However, your Poseidon Lua program will not be able to use this library.

## Compile and Run a program

Assume that we want to compile and run a Poseidon Lua program that is stored in the file `${project_dir}/HelloWorld/hello_world.tl`. We will proceed as follows.

1. Change directory to the location of the file containing the Poseidon Lua program. We must do this for the Poseidon Lua compiler to function properly.

```bash

cd "${project_dir}/HelloWorld"

```

2. Compile the Poseidon Lua program that is stored in the file `hello_world.tl`. The program is statically typechecked and compiled to a Modified Lua program that is stored in the file `hello_world.lua`.

```bash

$poseidonLua tlc hello_world.tl

```

3. Run the Modified Lua program that is stored in the file `hello_world.lua`. The program is run using the Modified Lua virtual machine.

```bash

$poseidonLua lua hello_world.lua

```

## Tutorials

Please see the following tutorials for an introduction to Poseidon Lua.

1. Tutorial 1: `${project_dir}/Tutorials/tutorial_1/tutorial_1.tl`

This tutorial shows the language features of Poseidon Lua. It includes a demonstration of the special operators for manual memory management as well as the C types of Poseidon Lua.

2. Tutorial 2: `${project_dir}/Tutorials/tutorial_2/tutorial_2.tl`

This tutorial demonstrates the usage of the Modified LuaFFI library. It includes a call to an external C function and the use of the value that is returned by that function within the rest of the Poseidon Lua program.

3. Tutorial 3: `${project_dir}/Tutorials/tutorial_3/tutorial_3.lua`

This tutorial shows the language features of Modified Lua. It includes a demonstration of the usage of all the special operators that are provided by Modified Lua. Run the program using `$poseidonLua lua tutorial_3.lua`.






